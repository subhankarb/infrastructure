set -e

export CYBERGREEN_BUILD_ENV="dev"

# set this to use S3
export CYBERGREEN_S3_BUCKET_NAME="..."
# set this to do local FS path
# export CYBERGREEN_LOCAL_FILE_ROOT= ""

export CYBERGREEN_FILE_ROOT=""
export CYBERGREEN_FILE_PATH="${CYBERGREEN_BUILD_ENV}"

if [ "${CYBERGREEN_S3_BUCKET_NAME}" ]; then
    export CYBERGREEN_FILE_ROOT="s3://${CYBERGREEN_S3_BUCKET_NAME}"
else
    export CYBERGREEN_FILE_ROOT="${CYBERGREEN_LOCAL_FILE_ROOT}"
fi

export CYBERGREEN_SOURCE_ROOT="${CYBERGREEN_FILE_ROOT}/${CYBERGREEN_FILE_PATH}/raw"
export CYBERGREEN_DEST_ROOT="${CYBERGREEN_FILE_ROOT}/${CYBERGREEN_FILE_PATH}/clean"

export CYBERGREEN_AWS_IAM="..."
export CYBERGREEN_AWS_CLUSTER_NAME="cybergreen-etl2-$CYBERGREEN_BUILD_ENV"
export CYBERGREEN_AWS_REGION="eu-west-1"
export CYBERGREEN_AWS_ETL_ROLE="cybergreenETL2TaskRole"
export CYBERGREEN_AWS_ECS_TASK="etl2-$CYBERGREEN_BUILD_ENV"
export CYBERGREEN_AWS_ECS_TASK_FAMILY="etl_${CYBERGREEN_BUILD_ENV}"
export CYBERGREEN_AWS_CONTAINER_IMAGE="etl_${CYBERGREEN_BUILD_ENV}"
export CYBERGREEN_AWS_CONTAINER_MEMORY="3500"
